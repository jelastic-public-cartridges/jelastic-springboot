#!/bin/sh
#
[ -f /opt/repo/.profile ] && sed -i 's/.x_/.x-/g' /opt/repo/.profile;
. /etc/jelastic/environment
. /opt/repo/versions/1.x-2.x/conf/variables.conf

if [ -x /etc/rc.d/init.d/functions ]; then
. /etc/rc.d/init.d/functions
fi

# the name of the project, will also be used for the war file, log file, ...
PROJECT_NAME=springboot
# the user which should run the service
SERVICE_USER=jelastic
# base directory for the spring boot jar
SPRINGBOOTAPP_HOME=/opt/repo/versions/1.x-2.x/APP
export SPRINGBOOTAPP_HOME

DIR_TO_SEARCH=$SPRINGBOOTAPP_HOME

#FATJAR_FILE
JARFILE_NAME=$(basename $(ls $SPRINGBOOTAPP_HOME/*.{j,w,e}ar 2>/dev/null | head -n 1) 2>/dev/null );

#PACKAGE
[ -z $JARFILE_NAME ] && JARFILE_NAME=$( cd $SPRINGBOOTAPP_HOME && find . -name '*.jar')

[ -z $JARFILE_NAME ] && echo "Error: Nothing to run" && exit 1

JARFILE_FULLPATH=$SPRINGBOOTAPP_HOME/$JARFILE_NAME

# java executable for spring boot app, change if you have multiple jdks installed
SPRINGBOOTAPP_JAVA=/usr/bin/java

# spring boot log-file
LOG="/opt/repo/logs/springboot.log"

LOCK="/opt/repo/lock/springboot.lock"
mkdir -p "/opt/repo/lock/"
[ -L "/opt/repo/logs" ] && {  rm "/opt/repo/logs" ; mkdir "/opt/repo/logs" ;}

RETVAL=0

pid_of_spring_boot() {
    pgrep -f "java."
}

start() {
#    return 0;
    [ -e "$LOG" ] && cnt=`wc -l "$LOG" | awk '{ print $1 }'` || cnt=1

    echo -n $"Starting $PROJECT_NAME: "

    chown -R 700:700 "/opt/repo/logs"

    [ ! -f "$JARFILE_FULLPATH" -a ! -L "$JARFILE_FULLPATH" ] && { echo "No application deployed"; return 0; }
    cd $SPRINGBOOTAPP_HOME && $SPRINGBOOTAPP_JAVA $JAVA_OPTS -jar $JARFILE_NAME > $LOG 2>&1 &

    while { pid_of_spring_boot > /dev/null ; } &&
    ! pgrep java > $LOCK ; do
        sleep 1
    done

    pid_of_spring_boot > /dev/null
    RETVAL=$?
    [ $RETVAL = 0 ] && { touch "$LOCK" && echo " [  OK  ]" || echo " [  FAIL  ]" ; }
}

stop() {
    echo -n "Stopping $PROJECT_NAME: "

    pid=`pid_of_spring_boot`
    [ -n "$pid" ] && kill $pid
    #RETVAL=$?
    RETVAL=0
    cnt=10
    while [ $RETVAL = 0 -a $cnt -gt 0 ] &&
        { pid_of_spring_boot > /dev/null ; } ; do
            sleep 1
            ((cnt--))
    done

    [ $RETVAL = 0 ] && { rm -f "$LOCK" && echo " [  OK  ]" ; } || echo " [  FAIL  ]"
    return $RETVAL
}

status() {
    pid=`pid_of_spring_boot`
    if [ -n "$pid" ]; then
        echo "$PROJECT_NAME (pid $pid) is running..."
        return 0
    fi
    if [ -f "$LOCK" ]; then
        echo $"${base} dead but subsys locked"
        return 2
    fi
    echo "$PROJECT_NAME is stopped"
    return 3
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    *)
        exit 0
esac

exit $RETVAL
